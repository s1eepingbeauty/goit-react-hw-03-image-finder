{"version":3,"sources":["utils/apiService.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["apiService","searchQuery","page","url","encodeURIComponent","fetch","then","response","json","data","hits","catch","error","console","log","defaults","styling","icons","Searchbar","state","initialValue","handleSubmit","event","preventDefault","onSubmit","props","text","hide","delay","setState","handleInputChange","value","target","toLowerCase","this","className","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","src","alt","data-source","ImageGallery","onImgClick","imgData","onClick","map","index","Button","modalRoot","document","querySelector","Modal","showSpinner","handleKeyDown","code","onClose","handleOverlayClick","currentTarget","handleImgLoad","window","addEventListener","removeEventListener","createPortal","color","height","width","visible","onLoad","App","currentImg","showModal","handleFetchData","newQuery","length","prevState","success","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","handleLoadMore","handleImgClick","img","dataset","source","nodeName","toggleModal","prevProps","prevQuery","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4281bd3c.chunk.js","sourcesContent":["const apiKey = '19951456-e393dc841832362ddd9551c23';\nconst baseUrl = 'https://pixabay.com/api/?image_type=photo&orientation=horizontal&per_page=12';\n\nconst apiService = (searchQuery, page) => {\n  const url = `${baseUrl}&q=${encodeURIComponent(searchQuery)}&page=${page}&key=${apiKey}`;\n\n  return fetch(url)\n    .then((response) => response.json())\n    .then((data) => data.hits)\n    .catch((error) => console.log(error));\n};\n\nexport default apiService;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { error, defaults } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/Material.css';\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './Searchbar.scss';\n\ndefaults.styling = 'material';\ndefaults.icons = 'material';\n\nclass Searchbar extends Component {\n  state = {\n    initialValue: '',\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { initialValue } = this.state;\n    const { onSubmit } = this.props;\n    if (initialValue === '') {\n      error({\n        text: 'Please enter your query',\n        hide: true,\n        delay: 2000,\n      });\n    }\n    onSubmit(initialValue);\n    this.setState({ initialValue: '' });\n  };\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ initialValue: value.toLowerCase() });\n  };\n\n  render() {\n    const { initialValue } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            onChange={this.handleInputChange}\n            value={initialValue}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.scss';\n\nconst ImageGalleryItem = ({ webformatURL, tags, largeImageURL }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        className=\"ImageGalleryItem-image\"\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.scss';\n\nexport default class ImageGallery extends Component {\n  render() {\n    const { onImgClick, imgData } = this.props;\n\n    return (\n      <ul className=\"ImageGallery\" onClick={onImgClick}>\n        {/* <!-- Набор <li> с изображениями --> */}\n        {imgData.map(({ webformatURL, tags, largeImageURL }, index) => (\n          <ImageGalleryItem\n            key={index}\n            webformatURL={webformatURL}\n            tags={tags}\n            largeImageURL={largeImageURL}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  onImgClick: PropTypes.func.isRequired,\n  imgData: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button\n      className=\"Button\"\n      type=\"button\"\n      onClick={() => {\n        onClick();\n      }}\n    >\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport './Modal.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  state = {\n    showSpinner: true,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n      this.setState({ showSpinner: true });\n    }\n  };\n\n  handleOverlayClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n      this.setState({ showSpinner: true });\n    }\n  };\n\n  handleImgLoad = () => {\n    this.setState({ showSpinner: false });\n  };\n\n  render() {\n    const { url, alt } = this.props;\n    const { showSpinner } = this.state;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"Modal\">\n          <Loader\n            className=\"spinner\"\n            type=\"Oval\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            visible={showSpinner}\n          />\n          <img className=\"modalImg\" src={url} alt={alt} onLoad={this.handleImgLoad} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  url: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport apiService from './utils/apiService';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport { success, error } from '@pnotify/core';\nimport '@pnotify/core/dist/Material.css';\nimport 'material-design-icons/iconfont/material-icons.css';\nimport './App.scss';\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    imgData: [],\n    currentImg: {},\n    showModal: false,\n    showSpinner: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const newQuery = this.state.searchQuery;\n\n    if (newQuery !== prevQuery) {\n      this.setState({ imgData: [], showSpinner: true });\n      this.handleFetchData(newQuery);\n    }\n  }\n\n  handleSubmit = (searchQuery) => {\n    this.setState({ searchQuery, page: 1 });\n  };\n\n  handleFetchData = (newQuery) => {\n    const { page } = this.state;\n\n    apiService(newQuery, page)\n      .then((data) => {\n        if (data.length === 0) {\n          return error({\n            text: 'No matching images found, please enter new search terms...',\n            hide: true,\n            delay: 2000,\n          });\n        }\n        this.setState((prevState) => ({\n          imgData: [...prevState.imgData, ...data],\n        }));\n        success({\n          text: 'Here you go :)',\n          hide: true,\n          delay: 1000,\n        });\n      })\n      .catch(({ message }) => console.log(message))\n      .finally(() => {\n        this.setState({ showSpinner: false });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n        this.setState((prevState) => ({ page: (prevState.page += 1) }));\n      });\n  };\n\n  handleLoadMore = () => {\n    const { searchQuery } = this.state;\n    this.setState({ showSpinner: true });\n    this.handleFetchData(searchQuery);\n  };\n\n  handleImgClick = (event) => {\n    const img = event.target;\n    const url = img.dataset.source;\n    const alt = img.alt;\n\n    if (img.nodeName === 'IMG') {\n      this.setState({ currentImg: { url, alt } });\n    }\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { imgData, showModal, currentImg, showSpinner } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n        <div className=\"gallery\">\n          <ImageGallery onImgClick={this.handleImgClick} imgData={imgData} />\n          <Loader\n            className=\"spinner\"\n            type=\"Oval\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            visible={showSpinner}\n          />\n          {imgData.length !== 0 && <Button onClick={this.handleLoadMore} />}\n        </div>\n        {showModal && (\n          <Modal url={currentImg.url} alt={currentImg.alt} onClose={this.toggleModal}></Modal>\n        )}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}